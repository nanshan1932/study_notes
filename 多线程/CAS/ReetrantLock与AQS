学习博客
https://juejin.im/post/5c021b59f265da6175737f0b

1.公平锁与非公平锁
 公平锁排队，FIFO
 非公平锁获取锁的时候直接先获取，获取不到才排队
 
 公平锁的优点是等待锁的线程不会夯死。
 缺点是吞吐效率相对非公平锁要低，等待队列中除第一个线程以外的所有线程都会阻塞，CPU唤醒阻塞线程的开销比非公平锁大。
 
 非公平锁的优点是可以减少唤起线程的开销（因为可能有的线程可以直接获取到锁，CPU也就不用唤醒它），所以整体的吞吐效率高。
 缺点是处于等待队列中的线程可能会夯死（试想恰好每次有新线程来，它恰巧都每次获取到锁，此时还在排队等待获取锁的线程就悲剧了），或者等很久才会获得锁

2.ReetrantLock与AQS
  AbstractQueuedSynchronizer 抽象队列同步器
  模板方法模式，作为一个基础组件
  
  ReetrantLock的内部类Sync继承AQS
  ReetrantLock有两个子类分别实现公平锁和非公平锁，NonfairSync，FairSync都继承Sync，实现模板中获取锁的抽象方法（tryAcquire）
  
